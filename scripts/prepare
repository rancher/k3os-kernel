#!/bin/bash
set -e

source $(dirname $0)/version
cd $(dirname $0)/..

set -x

mkdir -p ${DOWNLOADS}/kernel ${DOWNLOADS}/firmware

# kernel
mkdir -p build/kernel
dpkg-deb -x ${DOWNLOADS}/ubuntu-kernel.deb ${DOWNLOADS}/kernel
rsync -a ${DOWNLOADS}/kernel/usr/src/linux-source-*/debian* ./build/kernel/
tar xf ${DOWNLOADS}/kernel/usr/src/linux-source-*/linux-source*.tar.bz2 -C ./build/kernel/. --strip-components=1

## firmware
#mkdir -p build/firmware
#dpkg-deb -x ${DOWNLOADS}/ubuntu-firmware.deb ${DOWNLOADS}/firmware
#rsync -a ${DOWNLOADS}/firmware/lib/firmware/* ./build/firmware/

# patches
if [ -n "${NOPATCHES}" ]; then
    exit 0
fi
PATCHES_DIR=$(pwd)/patches
pushd build/kernel
for p in `find ${PATCHES_DIR} -name "*.patch"`; do
    echo "applying $p"
    patch -p1 -i $p
done
popd
